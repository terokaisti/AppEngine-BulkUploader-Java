package net.kaisti.bulkuploader.servlets;import java.io.IOException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.google.appengine.api.blobstore.BlobInfo;import com.google.appengine.api.blobstore.BlobInfoFactory;import com.google.appengine.api.blobstore.BlobKey;import com.google.appengine.api.blobstore.BlobstoreService;import com.google.appengine.api.blobstore.BlobstoreServiceFactory;@SuppressWarnings("serial")public class UploadConfigServlet extends HttpServlet {	public void doGet(HttpServletRequest req, HttpServletResponse resp)		throws IOException {		String blobKey = req.getParameter("blobKey");		BlobstoreService blobstoreService = BlobstoreServiceFactory.getBlobstoreService();		BlobInfoFactory blobInfoFactory = new BlobInfoFactory();		BlobInfo blobInfo = blobInfoFactory.loadBlobInfo(new BlobKey(blobKey));		long startIndex = 0;		long endIndex = 0;		String[] a = null ;				endIndex = 10000;		if(startIndex > endIndex) {			endIndex = blobInfo.getSize()-1;		}		byte[] b = blobstoreService.fetchData(new BlobKey(blobKey), 0, endIndex);		String data = new String(b);		a = data.toString().split("\\n");				resp.getWriter().write("<html><body>"+generateHtmlForm(blobKey));		previewLines(resp, a);		resp.getWriter().write("</body></html>");	}	private void previewLines(HttpServletResponse resp, String[] a)			throws IOException {				int max = 5; // display first lines from file		if( max > a.length-1 )			max = a.length-1;		if( max < 0)			return;		for(int i = 0; i < max; i++)			resp.getWriter().write(a[i]+"<br/>");	}	private String generateHtmlForm(String blobKey) {	    return 	         "<form action='/start-mapper' method='GET'>"	        	+ "<input name='blobKey' type='hidden' value='"+blobKey+"' />"	        	+ "Entity name* <input name='entityKind' type='text' value='TestEntry' /><br/>"	        	+ "Columns* <input name='columns' type='text' value='' /><br/>"	        	+ "<i>comma separated list of columns</i><br/>"	        	+ "Key column index <input name='keyColumnIndex' type='text' value='-1' /><br/>"		        + "Delimiter <input name='delimiter' type='text' value=',' /><br/>"		        + "String quote <input name='quote' type='text' value='\"' /><br/>"		        + "<i>used to distinguish strings from doubles</i><br/>"//		        + "Delete blob after mapping <input name='deleteBlob' type='checkbox' value='1' /> "		        + "Shard count <input name='shardCount' type='text' value='' size='5'/><br/>"		        + "<input type='submit' value='Start Mapper'><br/>"	        + "</form>";	}}