package net.kaisti.bulkuploader.servlets;import java.io.IOException;import javax.servlet.http.HttpServlet;import java.util.Arrays;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import net.kaisti.bulkuploader.domain.UploadConfig;import net.kaisti.bulkuploader.mappers.ImportFromBlobstoreMapper;import net.kaisti.bulkuploader.mappers.helper.MapperHelper;import com.google.appengine.repackaged.com.google.common.base.Strings;import com.google.code.twig.ObjectDatastore;import com.google.code.twig.annotation.AnnotationObjectDatastore;@SuppressWarnings("serial")public class StartMapperServlet extends HttpServlet {		public void doGet(HttpServletRequest req, HttpServletResponse resp)			throws IOException {		resp.setContentType("text/html");		String blobKey = req.getParameter("blobKey");		String entityKind = req.getParameter("entityKind");		if(Strings.isNullOrEmpty(entityKind)) {			resp.getWriter().write("Missing entityKind");			return;		}		String columnsString = req.getParameter("columns");		if(Strings.isNullOrEmpty(entityKind)) {			resp.getWriter().write("Missing columns");			return;		}		String keyColumnIndexString = req.getParameter("keyColumnIndex");		String deleteBlob = req.getParameter("deleteBlob");		String shardCount = req.getParameter("shardCount");					UploadConfig conf = new UploadConfig(blobKey, entityKind, req.getParameter("delimiter"), req.getParameter("quote"));		if(!Strings.isNullOrEmpty(deleteBlob))			conf.deleteBlob = true;				if(Integer.parseInt(keyColumnIndexString) > -1) {			conf.keyColumnIndex = Integer.parseInt(keyColumnIndexString);		}		conf.columns = Arrays.asList(columnsString.split(","));				MapperHelper.setUploadConfig(conf);				if(!Strings.isNullOrEmpty(shardCount) && Integer.parseInt(shardCount) > 0) {			MapperHelper.StartMapReduceWithBlob(ImportFromBlobstoreMapper.class, blobKey, Integer.parseInt(shardCount));		}		else			MapperHelper.StartMapReduceWithBlob(ImportFromBlobstoreMapper.class, blobKey);        resp.getWriter().write("Mapper started... <a href='/mapreduce/status'>View status</a>");	}}